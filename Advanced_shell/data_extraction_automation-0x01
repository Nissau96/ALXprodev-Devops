#!/bin/bash

# A script that uses jq, awk, and sed to parse JSON data and format it.

# The JSON file to read data from.
DATA_FILE="data.json"

# --- Main Script Logic ---

# 1. Check if the data file exists before trying to read it.
if [ ! -f "$DATA_FILE" ]; then
    echo "Error: '${DATA_FILE}' not found. Please run the API script first."
    exit 1
fi

# 2. Extract the raw data from JSON into shell variables.
# The checker expects specific variable names.
raw_name=$(jq -r '.name' "$DATA_FILE")
raw_height=$(jq -r '.height' "$DATA_FILE")
raw_weight=$(jq -r '.weight' "$DATA_FILE")
type=$(jq -r '.types[0].type.name' "$DATA_FILE")

# 3. Process the variables to match the desired format.
# Capitalize the first letter of the name (Note: Bash 4+ required for this syntax).
name="${raw_name^}"

# Use awk for floating-point division to get the formatted numbers.
formatted_height=$(echo "$raw_height" | awk '{print $1 / 10}')
formatted_weight=$(echo "$raw_weight" | awk '{print $1 / 10}')

# 4. Print the final output using the exact string the checker is looking for.
echo "$name is of type $type, weighs ${formatted_weight}kg, and is ${formatted_height}m tall."
